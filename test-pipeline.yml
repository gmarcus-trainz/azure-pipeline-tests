# minorVersion: "0"

# schedules:
# - cron: '0 3 * * *'
#   displayName: 'Deploy every day at 3 A.M.'
#   branches:
#     include:
#     - release
#   always: false


trigger:
  - '*'
  # branches:
  # include:
  #   - "development" 

# - paths:
#     exclude:
#       - __Scripts/* # exclude the scripts folder
  

variables:
  buildConfiguration: "Release"
  releaseBranchName: 'development'
  vmImageSource: 'windows-latest'

stages:
- stage: "Build"
  displayName: "Build the web application"
  jobs:
  - job: "Build"
    displayName: "Build Tricia"
    pool:
      vmImage: "$(vmImageSource)"
      demands:
        - npm
    variables:
      wwwrootDir: "Tricia/wwwroot"
      dotnetSdkVersion: "5.x"
    steps:
    - task: UseDotNet@2
      displayName: "Use .NET SDK $(dotnetSdkVersion)"
      inputs:
        version: "$(dotnetSdkVersion)"
    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: "Write build info"
      workingDirectory: $(wwwrootDir)
  
    - template: build.yml
      parameters:
        buildConfiguration: "$(buildConfiguration)"
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: "Dev"
  displayName: "Deploy to dev environment"
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy_Dev
    pool:
      vmImage: "$(vmImageSource)"
    environment: 
       name: 'Dev'    
       resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy.yml
            parameters:
              webSiteName: "Dev.Trainz.Tricia"
              projectName: 'Dev.Trainz.Tricia'
              appPoolName: 'Dev.Trainz.Trizia'

        
- stage: 'Test'
  displayName: 'Deploy to the Test environment'
  dependsOn: Dev
  condition: succeeded()  # and(succeeded(), eq(variables['Build.Reason'], 'Schedule'))
  jobs:
  - deployment: Deploy_Test
    pool:
      vmImage: "$(vmImageSource)"
    environment: 
       name: 'Test'    
       resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
           steps:
            - template: deploy.yml
              parameters:
                webSiteName: "Test.Trainz.Tricia"
                projectName: 'Test.Trainz.Tricia'
                appPoolName: 'Test.Trainz.Trizia'

  - job: RunUITests
    dependsOn: Deploy_Test
    displayName: 'Run UI tests'
    pool:
       vmImage: "$(vmImageSource)"
    steps: 
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '/clientapp/e2e'
        verbose: false
      displayName: 'Run npm install'
    
    - task: PowerShell@2
      inputs:
        filePath: './node_modules/cypress/bin/cypress run'
        arguments: 'record'
        errorActionPreference: 'continue'
        warningPreference: 'continue'
        informationPreference: 'continue'
        verbosePreference: 'continue'
        debugPreference: 'continue'
        workingDirectory: 'clientapp/e2e'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
- stage: 'Production'
  displayName: 'Deploy to the production environment'
  dependsOn: Test
  jobs:
  - job: waitForValidation
    dependsOn: 'RunUITests'
    displayName: Wait for external validation  
    pool: server    
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:   
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          kcummings@trainz.com
          bhanna@trainz.com
          gmarcus@trainz.com
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'reject'
  - deployment: Deploy_Production
    pool:
      vmImage: "$(vmImageSource)"
    environment: 
        name: 'Production'    
        resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy.yml
            parameters:
                webSiteName: "Trainz.Tricia"
                projectName: 'Trainz.Tricia'
                appPoolName: 'Trainz.Trizia'


